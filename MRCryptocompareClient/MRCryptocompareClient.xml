<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MRCryptocompareClient</name>
    </assembly>
    <members>
        <member name="T:MRCryptocompareClient.Client.CryptocompareClient">
            <summary>
            Cryptocompare api client
            </summary>
        </member>
        <member name="P:MRCryptocompareClient.Client.CryptocompareClient.AccessToken">
            <summary>
            Primary service access token
            </summary>
        </member>
        <member name="P:MRCryptocompareClient.Client.CryptocompareClient.ApplicationName">
            <summary>
            Your application name
            </summary>
        </member>
        <member name="M:MRCryptocompareClient.Client.CryptocompareClient.SetAccessToken(System.String)">
            <summary>
            Set service access token
            </summary>
            <param name="accessToken">Service access token</param>
            <returns></returns>
        </member>
        <member name="M:MRCryptocompareClient.Client.CryptocompareClient.SetApplicationName(System.String)">
            <summary>
            Set application name is extra param for requests
            </summary>
            <param name="applicationName">Your application name</param>
            <returns></returns>
        </member>
        <member name="F:MRCryptocompareClient.Infrastructure.Enum.CalculationType.Close">
            <summary>
            a Close of the day close price.
            </summary>
        </member>
        <member name="F:MRCryptocompareClient.Infrastructure.Enum.CalculationType.MidHighLow">
            <summary>
             the average between the 24 H high and low.
            </summary>
        </member>
        <member name="F:MRCryptocompareClient.Infrastructure.Enum.CalculationType.VolFVolT">
            <summary>
             the total volume to / the total volume from.
            </summary>
        </member>
        <member name="F:MRCryptocompareClient.Infrastructure.Enum.AvgType.HourVWAP">
            <summary>
            a HourVWAP of hourly price
            </summary>
        </member>
        <member name="F:MRCryptocompareClient.Infrastructure.Enum.AvgType.MidHighLow">
            <summary>
             the average between the 24 H high and low
            </summary>
        </member>
        <member name="F:MRCryptocompareClient.Infrastructure.Enum.AvgType.VolFVolT">
            <summary>
             the total volume to / the total volume from
            </summary>
        </member>
        <member name="P:MRCryptocompareClient.Infrastructure.Interface.IRequestModel.ExtraParams">
            <summary>
            The name of your application (we recommend you send it) 
            Set this param by client.SetApplicationName()
            <see cref="T:MRCryptocompareClient.Client.CryptocompareClient"/>
            </summary>
        </member>
        <member name="M:MRCryptocompareClient.Infrastructure.Interface.IRequestModel.SetApplicationName(System.String)">
            <summary>
            This method is used by nodes
            </summary>
            <param name="applicationName"></param>
            <returns></returns>
        </member>
        <member name="P:MRCryptocompareClient.Infrastructure.Model.Historical.HistoricalAny.Aggregate">
            <summary>
            Time period to aggregate the data over (for daily it's days, for hourly it's hours and for minute histo it's minutes)
            [ Min - 1] [ Max - 30] [ Default - true]
            </summary>
        </member>
        <member name="P:MRCryptocompareClient.Infrastructure.Model.Historical.HistoricalAny.AggregatePredictableTimePeriods">
            <summary>
            True by default, only used when the aggregate param is also in use. 
            If false it will aggregate based on the current time.If the param is false and the time you make the call is 1pm - 2pm, with aggregate 2, it will create the time slots: ...
            9am, 11am, 1pm.If the param is false and the time you make the call is 2pm - 3pm, with aggregate 2, it will create the time slots: ... 10am, 12am, 2pm.
            If the param is true (default) and the time you make the call is 1pm - 2pm, with aggregate 2, it will create the time slots: ... 8am, 10am, 12pm.
            If the param is true (default) and the time you make the call is 2pm - 3pm, with aggregate 2, it will create the time slots: ... 10am, 12am, 2pm. 
            [ Default - true]
            </summary>
        </member>
        <member name="P:MRCryptocompareClient.Infrastructure.Model.Historical.HistoricalAny.Limit">
            <summary>
            The number of data points to return 
            [ Min - 1] [ Max - 2000] [ Default - 30]
            </summary>
        </member>
        <member name="P:MRCryptocompareClient.Infrastructure.Model.Historical.HistoricalAny.AllData">
            <summary>
            Returns all data (only available on histo day) 
            [ Default - false]
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:MRCryptocompareClient.Infrastructure.Model.Historical.HistoricalAny.ToTs" -->
        <member name="P:MRCryptocompareClient.Infrastructure.Model.Historical.HistoricalAnyAverage.AvgType">
            <summary>
            Type of average to calculate.
            [ Default - HourVWAP]
            </summary>
        </member>
        <member name="P:MRCryptocompareClient.Infrastructure.Model.Historical.HistoricalAnyAverage.UTCHourDiff">
            <summary>
            By deafult it does UTC, if you want a different time zone just pass the hour difference. 
            For PST you would pass -8 for example. 
            [ Min - -12] [ Max - 14] [ Default - 0]
            </summary>
        </member>
        <member name="P:MRCryptocompareClient.Infrastructure.Model.Historical.HistoricalAnyAverage.ToTs">
            <summary>
            Returns historical data before that timestamp.
            </summary>
        </member>
        <member name="P:MRCryptocompareClient.Infrastructure.Model.Historical.HistoricalAnyTimestamp.Ts">
            <summary>
            The unix timestamp of interest
            </summary>
        </member>
        <member name="P:MRCryptocompareClient.Infrastructure.Model.Historical.HistoricalAnyTimestamp.CalculationType">
            <summary>
            Type of average to calculate  
            [ Min length - 2] [ Max length - 30] [ Default - Close]
            </summary>
        </member>
        <member name="P:MRCryptocompareClient.Infrastructure.Model.Historical.HistoricalBase.TryConversion">
            <summary>
            If set to false, it will try to get only direct trading values 
            [ Default - true]
            </summary>
        </member>
        <member name="P:MRCryptocompareClient.Infrastructure.Model.Historical.HistoricalBase.Fsym">
            <summary>
            The cryptocurrency symbol of interest 
            [ Min length - 1] [ Max length - 10]
            </summary>
        </member>
        <member name="P:MRCryptocompareClient.Infrastructure.Model.Historical.HistoricalBase.Tsym">
            <summary>
            The currency symbol to convert into 
            [ Min length - 1] [ Max length - 10]
            </summary>
        </member>
        <member name="P:MRCryptocompareClient.Infrastructure.Model.Historical.HistoricalBase.E">
            <summary>
            The exchange to obtain data from (our aggregated average - CCCAGG - by default) 
            [ Min length - 2] [ Max length - 30] [ Default - CCCAGG]
            </summary>
        </member>
        <member name="P:MRCryptocompareClient.Infrastructure.Model.Historical.HistoricalBase.Sign">
            <summary>
            If set to true, the server will sign the requests (by default we don't sign them),
            this is useful for usage in smart contracts 
            [ Default - false]
            </summary>
        </member>
        <member name="T:MRCryptocompareClient.Infrastructure.Props.UrlProperty">
            <summary>
            Url property
            </summary>
        </member>
        <member name="T:MRCryptocompareClient.Infrastructure.Props.UrlPropertyCollection">
            <summary>
            Basic collection of url properties.
            </summary>
        </member>
        <member name="M:MRCryptocompareClient.Infrastructure.Props.UrlPropertyCollection.AddAccessToken(System.String)">
            <summary>
            Add access token to collection.
            </summary>
            <param name="accessToken">Service access token</param>
            <returns></returns>
        </member>
        <member name="M:MRCryptocompareClient.Infrastructure.Props.UrlPropertyCollection.ParseObject(System.Object)">
            <summary>
            Transform object to Url property collection.
            </summary>
            <param name="target">Object to transform</param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:MRCryptocompareClient.Infrastructure.Props.UrlPropertyCollection.ToString" -->
        <!-- Badly formed XML comment ignored for member "T:MRCryptocompareClient.Node.NodeHistorical" -->
        <member name="M:MRCryptocompareClient.Tools.Extensions.StringExtensions.ToSnakeLowerCase(System.String)">
            <summary>
            ThisIsExample => this_is_example
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:MRCryptocompareClient.Tools.Extensions.StringExtensions.ToFirstLowerCase(System.String)">
            <summary>
            ThisIsExample => thisIsExample
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="T:MRCryptocompareClient.Tools.Navigator">
            <summary>
            Base SDK navigator class
            </summary>
        </member>
        <member name="F:MRCryptocompareClient.Tools.Navigator.BASE_URL">
            <summary>
            Base service url
            </summary>
        </member>
        <member name="P:MRCryptocompareClient.Tools.Navigator.HistoricalDaily">
            <summary>
            Historical url
            </summary>
        </member>
    </members>
</doc>
